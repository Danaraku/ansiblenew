# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

# Ex 1: Ungrouped hosts, specify before any group headers:
172.31.13.219
172.31.5.113
12.23.24.24

# G R O U P S
#
[north]
172.31.13.219

[south]
172.31.5.113

[east]
172.31.13.219
172.31.5.113

[localservers]
local_server1 ansible_host=127.0.0.1 ansible_connection=local deprecation_warnings=false

local_server2 ansible_host=127.0.0.2 ansible_connection=local INTERPRETER_PYTHON=auto_silent

## green.example.com
## blue.example.com
## 192.168.100.1
## 192.168.100.10

# Ex 2: A collection of hosts belonging to the 'webservers' group:

## [webservers]
## alpha.example.org
## beta.example.org
## 192.168.1.100
## 192.168.1.110

# If you have multiple hosts following a pattern, you can specify
# them like this:

## www[001:006].example.com

# You can also use ranges for multiple hosts: 

## db-[99:101]-node.example.com

# Ex 3: A collection of database servers in the 'dbservers' group:

## [dbservers]
##
## db01.intranet.mydomain.net
## db02.intranet.mydomain.net
## 10.25.1.56
## 10.25.1.57


# Ex4: Multiple hosts arranged into groups such as 'Debian' and 'openSUSE':

## [Debian]
## alpha.example.org
## beta.example.org

## [openSUSE]
## green.example.com
## blue.example.com
local_server1 ansible_host=127.0.0.1 ansible_connection=local deprecation_warnings=false
local_server2 ansible_jost=127.0.0.2 ansible_connection=local INTERPRETER_PYTHON=auto_silent
